"""Increase password_hash length

Revision ID: 58132c21f6ff
Revises: 
Create Date: 2024-10-22 08:46:02.000000

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '58132c21f6ff'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.alter_column('password_hash',
               existing_type=sa.VARCHAR(length=128),
               type_=sa.String(length=255),
               existing_nullable=True)

    # Add user_id column to expense table
    with op.batch_alter_table('expense', schema=None) as batch_op:
        batch_op.add_column(sa.Column('user_id', sa.Integer(), nullable=True))

    # Create a default user if not exists
    op.execute("INSERT INTO \"user\" (username, email, password_hash) SELECT 'default_user', 'default@example.com', 'default_hash' WHERE NOT EXISTS (SELECT 1 FROM \"user\" LIMIT 1)")

    # Set default user_id for existing expenses
    op.execute("UPDATE expense SET user_id = (SELECT id FROM \"user\" ORDER BY id LIMIT 1) WHERE user_id IS NULL")

    # Make user_id non-nullable and add foreign key constraint
    with op.batch_alter_table('expense', schema=None) as batch_op:
        batch_op.alter_column('user_id', nullable=False)
        batch_op.create_foreign_key(None, 'user', ['user_id'], ['id'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('expense', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_column('user_id')

    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.alter_column('password_hash',
               existing_type=sa.String(length=255),
               type_=sa.VARCHAR(length=128),
               existing_nullable=True)

    # ### end Alembic commands ###
